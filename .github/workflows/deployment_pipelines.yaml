name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  DB_USER: ${{ secrets.DB_USER }}
  DB_URL: ${{ secrets.DB_URL }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build (skip tests)
        run: mvn -B clean package -DskipTests=true

      - name: Upload entire project directory
        uses: actions/upload-artifact@v4
        with:
          name: project-files
          path: .

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download project files
        uses: actions/download-artifact@v4
        with:
          name: project-files
          path: project

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run tests
        working-directory: ./project
        run: mvn -B test

  push-registry:
    needs: test
    name: Push to Registry
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Build container image
        run: docker build -t registry.digitalocean.com/${{ secrets.REGISTRY_NAME }}/backend-microservice:$(echo $GITHUB_SHA | head -c7) .

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Push image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/${{ secrets.REGISTRY_NAME }}/backend-microservice:$(echo $GITHUB_SHA | head -c7)

  deploy:
    needs: push-registry
    name: Deploy to cluster
    runs-on: ubuntu-latest
    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          
      - name: Deploy cluster
        run: |
          doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}
          kubectl config current-context
          kubectl create deployment management \
          --image= registry.digitalocean.com/${{ secrets.REGISTRY_NAME }}/management-microservice:${{ github.sha }} --dry-run=client -o yaml > deployment.yaml
          kubectl apply -f deployment.yaml
          kubectl set env deployment/management \
            DB_URL="${{ secrets.DB_URL }}" DB_USER="${{ secrets.DB_USER }}" DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
          kubectl rollout status deployment/management
          kubectl create service loadbalancer management --tcp=8080:8080 --dry-run -o yaml > service.yaml
          kubectl apply -f service.yaml
          kubectl get services -o wide